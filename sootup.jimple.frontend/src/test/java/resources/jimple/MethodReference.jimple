public super class MethodReference extends java.lang.Object
{
    public void <init>()
    {
        unknown l0;


        l0 := @this: MethodReference;

        specialinvoke l0.<java.lang.Object: void <init>()>();

        return;
    }

    public void methodRefMethod()
    {
        unknown $stack1, l0;


        l0 := @this: MethodReference;

        $stack1 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $stack1.<java.io.PrintStream: void println(java.lang.String)>("Instance Method");

        return;
    }

    public static void main(java.lang.String[])
    {
        unknown $stack4, $stack3, l0, l1, l2, $stack5;


        l0 := @parameter0: java.lang.String[];

        $stack3 = new MethodReference;

        specialinvoke $stack3.<MethodReference: void <init>()>();

        l1 = $stack3;

        $stack4 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(l1);

        $stack5 = dynamicinvoke "display" <MyInterface (MethodReference)>(l1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_VIRTUAL" <MethodReference: void methodRefMethod()>, methodtype: void __METHODTYPE__());

        l2 = $stack5;

        interfaceinvoke l2.<MyInterface: void display()>();

        return;
    }
}

