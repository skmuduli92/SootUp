public super class TryCatchFinally extends java.lang.Object
{
    public void tryCatch()
    {
        unknown $stack4, $stack3, l0, l1, l2, $stack5;


        l0 := @this: TryCatchFinally;

        l1 = "";

      label1:
        l1 = "try";

        $stack3 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $stack3.<java.io.PrintStream: void println(java.lang.String)>(l1);

      label2:
        goto label4;

      label3:
        $stack4 := @caughtexception;

        l2 = $stack4;

        l1 = "catch";

        $stack5 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $stack5.<java.io.PrintStream: void println(java.lang.String)>(l1);

      label4:
        return;

 catch java.lang.Exception from label1 to label2 with label3;
    }

    public void tryCatchNested()
    {
        unknown $stack4, $stack3, l0, l1, l2, $stack6, $stack5, $stack8, $stack7;


        l0 := @this: TryCatchFinally;

        l1 = "";

      label1:
        l1 = "1try";

        $stack3 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $stack3.<java.io.PrintStream: void println(java.lang.String)>(l1);

      label2:
        l1 = "2try";

        $stack4 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $stack4.<java.io.PrintStream: void println(java.lang.String)>(l1);

      label3:
        goto label5;

      label4:
        $stack7 := @caughtexception;

        l2 = $stack7;

        l1 = "2catch";

        $stack8 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $stack8.<java.io.PrintStream: void println(java.lang.String)>(l1);

      label5:
        goto label7;

      label6:
        $stack5 := @caughtexception;

        l2 = $stack5;

        l1 = "1catch";

        $stack6 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $stack6.<java.io.PrintStream: void println(java.lang.String)>(l1);

      label7:
        return;

 catch java.lang.Exception from label2 to label3 with label4;
 catch java.lang.Exception from label1 to label5 with label6;
    }

    public void tryCatchFinallyNested()
    {
        unknown $stack4, l0, l1, l2, l3, $stack14, $stack15, $stack12, $stack13, $stack10, $stack11, $stack9, $stack6, $stack5, $stack8, $stack7;


        l0 := @this: TryCatchFinally;

        l1 = "";

      label1:
        l1 = "1try";

        $stack4 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $stack4.<java.io.PrintStream: void println(java.lang.String)>(l1);

      label2:
        l1 = "2try";

        $stack5 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $stack5.<java.io.PrintStream: void println(java.lang.String)>(l1);

      label3:
        goto label5;

      label4:
        $stack12 := @caughtexception;

        l2 = $stack12;

        l1 = "2catch";

        $stack13 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $stack13.<java.io.PrintStream: void println(java.lang.String)>(l1);

      label5:
        $stack14 = "1finally";

        l1 = $stack14;

        $stack6 = <java.lang.System: java.io.PrintStream out>;

        $stack15 = l1;

        virtualinvoke $stack6.<java.io.PrintStream: void println(java.lang.String)>($stack15);

        goto label9;

      label6:
        $stack9 := @caughtexception;

        l2 = $stack9;

        l1 = "1catch";

        $stack10 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $stack10.<java.io.PrintStream: void println(java.lang.String)>(l1);

      label7:
        l1 = "1finally";

        $stack11 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $stack11.<java.io.PrintStream: void println(java.lang.String)>(l1);

        goto label9;

      label8:
        $stack7 := @caughtexception;

        l3 = $stack7;

        l1 = "1finally";

        $stack8 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $stack8.<java.io.PrintStream: void println(java.lang.String)>(l1);

        throw l3;

      label9:
        return;

 catch java.lang.Exception from label2 to label3 with label4;
 catch java.lang.Exception from label1 to label5 with label6;
 catch java.lang.Throwable from label1 to label5 with label8;
 catch java.lang.Throwable from label6 to label7 with label8;
    }

    public void tryCatchFinallyNestedInFinally()
    {
        unknown l0, l1, $stack18, l2, $stack19, l3, $stack16, l4, $stack17, $stack14, $stack15, $stack12, $stack13, $stack10, $stack21, $stack11, $stack20, $stack9, $stack6, $stack5, $stack8, $stack7;


        l0 := @this: TryCatchFinally;

        l1 = "";

      label01:
        l1 = "1try";

        $stack5 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $stack5.<java.io.PrintStream: void println(java.lang.String)>(l1);

      label02:
        l1 = "1finally";

        $stack6 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $stack6.<java.io.PrintStream: void println(java.lang.String)>(l1);

      label03:
        l1 = "2try";

        $stack7 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $stack7.<java.io.PrintStream: void println(java.lang.String)>(l1);

      label04:
        goto label16;

      label05:
        $stack20 := @caughtexception;

        l2 = $stack20;

        l1 = "2catch";

        $stack21 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $stack21.<java.io.PrintStream: void println(java.lang.String)>(l1);

        goto label16;

      label06:
        $stack16 := @caughtexception;

        l2 = $stack16;

        l1 = "1catch";

        $stack17 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $stack17.<java.io.PrintStream: void println(java.lang.String)>(l1);

      label07:
        l1 = "1finally";

        $stack18 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $stack18.<java.io.PrintStream: void println(java.lang.String)>(l1);

      label08:
        l1 = "2try";

        $stack19 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $stack19.<java.io.PrintStream: void println(java.lang.String)>(l1);

      label09:
        goto label16;

      label10:
        $stack14 := @caughtexception;

        l2 = $stack14;

        l1 = "2catch";

        $stack15 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $stack15.<java.io.PrintStream: void println(java.lang.String)>(l1);

        goto label16;

      label11:
        $stack10 := @caughtexception;

        l3 = $stack10;

        l1 = "1finally";

        $stack11 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $stack11.<java.io.PrintStream: void println(java.lang.String)>(l1);

      label12:
        l1 = "2try";

        $stack12 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $stack12.<java.io.PrintStream: void println(java.lang.String)>(l1);

      label13:
        goto label15;

      label14:
        $stack8 := @caughtexception;

        l4 = $stack8;

        l1 = "2catch";

        $stack9 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $stack9.<java.io.PrintStream: void println(java.lang.String)>(l1);

      label15:
        $stack13 = l3;

        throw $stack13;

      label16:
        return;

 catch java.lang.Exception from label03 to label04 with label05;
 catch java.lang.Exception from label01 to label02 with label06;
 catch java.lang.Exception from label08 to label09 with label10;
 catch java.lang.Throwable from label01 to label02 with label11;
 catch java.lang.Throwable from label06 to label07 with label11;
 catch java.lang.Exception from label12 to label13 with label14;
    }

    public void tryCatchFinallyCombined()
    {
        unknown $stack4, l0, l1, l2, l3, $stack9, $stack6, $stack10, $stack5, $stack8, $stack7;


        l0 := @this: TryCatchFinally;

        l1 = "";

      label1:
        l1 = "try";

        $stack4 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $stack4.<java.io.PrintStream: void println(java.lang.String)>(l1);

      label2:
        l1 = "finally";

        $stack5 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $stack5.<java.io.PrintStream: void println(java.lang.String)>(l1);

        goto label6;

      label3:
        $stack8 := @caughtexception;

        l2 = $stack8;

        l1 = "catch";

        $stack9 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $stack9.<java.io.PrintStream: void println(java.lang.String)>(l1);

      label4:
        l1 = "finally";

        $stack10 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $stack10.<java.io.PrintStream: void println(java.lang.String)>(l1);

        goto label6;

      label5:
        $stack6 := @caughtexception;

        l3 = $stack6;

        l1 = "finally";

        $stack7 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $stack7.<java.io.PrintStream: void println(java.lang.String)>(l1);

        throw l3;

      label6:
        return;

 catch java.lang.RuntimeException from label1 to label2 with label3;
 catch java.lang.StackOverflowError from label1 to label2 with label3;
 catch java.lang.Throwable from label1 to label2 with label5;
 catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void tryCatchFinallyNestedInCatch()
    {
        unknown l0, l1, l2, l3, $stack16, l4, $stack14, $stack15, $stack12, $stack13, $stack10, $stack11, $stack9, $stack6, $stack5, $stack8, $stack7;


        l0 := @this: TryCatchFinally;

        l1 = "";

      label01:
        l1 = "1try";

        $stack5 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $stack5.<java.io.PrintStream: void println(java.lang.String)>(l1);

      label02:
        l1 = "1finally";

        $stack6 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $stack6.<java.io.PrintStream: void println(java.lang.String)>(l1);

        goto label10;

      label03:
        $stack12 := @caughtexception;

        l2 = $stack12;

        l1 = "1catch";

        $stack13 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $stack13.<java.io.PrintStream: void println(java.lang.String)>(l1);

      label04:
        l1 = "2try";

        $stack14 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $stack14.<java.io.PrintStream: void println(java.lang.String)>(l1);

      label05:
        goto label07;

      label06:
        $stack9 := @caughtexception;

        l3 = $stack9;

        l1 = "2catch";

        $stack10 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $stack10.<java.io.PrintStream: void println(java.lang.String)>(l1);

      label07:
        $stack15 = "1finally";

        l1 = $stack15;

        $stack11 = <java.lang.System: java.io.PrintStream out>;

        $stack16 = l1;

        virtualinvoke $stack11.<java.io.PrintStream: void println(java.lang.String)>($stack16);

        goto label10;

      label08:
        $stack7 := @caughtexception;

        l4 = $stack7;

      label09:
        l1 = "1finally";

        $stack8 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $stack8.<java.io.PrintStream: void println(java.lang.String)>(l1);

        throw l4;

      label10:
        return;

 catch java.lang.Exception from label01 to label02 with label03;
 catch java.lang.Exception from label04 to label05 with label06;
 catch java.lang.Throwable from label01 to label02 with label08;
 catch java.lang.Throwable from label03 to label07 with label08;
 catch java.lang.Throwable from label08 to label09 with label08;
    }

    public void <init>()
    {
        unknown l0;


        l0 := @this: TryCatchFinally;

        specialinvoke l0.<java.lang.Object: void <init>()>();

        return;
    }

    public void tryCatchFinally()
    {
        unknown $stack4, l0, l1, l2, l3, $stack9, $stack6, $stack10, $stack5, $stack8, $stack7;


        l0 := @this: TryCatchFinally;

        l1 = "";

      label1:
        l1 = "try";

        $stack4 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $stack4.<java.io.PrintStream: void println(java.lang.String)>(l1);

      label2:
        l1 = "finally";

        $stack5 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $stack5.<java.io.PrintStream: void println(java.lang.String)>(l1);

        goto label6;

      label3:
        $stack8 := @caughtexception;

        l2 = $stack8;

        l1 = "catch";

        $stack9 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $stack9.<java.io.PrintStream: void println(java.lang.String)>(l1);

      label4:
        l1 = "finally";

        $stack10 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $stack10.<java.io.PrintStream: void println(java.lang.String)>(l1);

        goto label6;

      label5:
        $stack6 := @caughtexception;

        l3 = $stack6;

        l1 = "finally";

        $stack7 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $stack7.<java.io.PrintStream: void println(java.lang.String)>(l1);

        throw l3;

      label6:
        return;

 catch java.lang.Exception from label1 to label2 with label3;
 catch java.lang.Throwable from label1 to label2 with label5;
 catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void tryCatchNestedInCatch()
    {
        unknown $stack4, l0, l1, l2, l3, $stack9, $stack6, $stack5, $stack8, $stack7;


        l0 := @this: TryCatchFinally;

        l1 = "";

      label1:
        l1 = "1try";

        $stack4 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $stack4.<java.io.PrintStream: void println(java.lang.String)>(l1);

      label2:
        goto label7;

      label3:
        $stack7 := @caughtexception;

        l2 = $stack7;

        l1 = "1catch";

        $stack8 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $stack8.<java.io.PrintStream: void println(java.lang.String)>(l1);

      label4:
        l1 = "2try";

        $stack9 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $stack9.<java.io.PrintStream: void println(java.lang.String)>(l1);

      label5:
        goto label7;

      label6:
        $stack5 := @caughtexception;

        l3 = $stack5;

        l1 = "2catch";

        $stack6 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $stack6.<java.io.PrintStream: void println(java.lang.String)>(l1);

      label7:
        return;

 catch java.lang.Exception from label1 to label2 with label3;
 catch java.lang.Exception from label4 to label5 with label6;
    }

    public void tryCatchCombined()
    {
        unknown $stack4, $stack3, l0, l1, l2, $stack5;


        l0 := @this: TryCatchFinally;

        l1 = "";

      label1:
        l1 = "try";

        $stack3 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $stack3.<java.io.PrintStream: void println(java.lang.String)>(l1);

      label2:
        goto label4;

      label3:
        $stack4 := @caughtexception;

        l2 = $stack4;

        l1 = "catch";

        $stack5 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $stack5.<java.io.PrintStream: void println(java.lang.String)>(l1);

      label4:
        return;

 catch java.lang.RuntimeException from label1 to label2 with label3;
 catch java.lang.StackOverflowError from label1 to label2 with label3;
    }
}

