public super class TryWithResourcesConcise extends java.lang.Object
{
    public void <init>()
    {
        unknown l0;


        l0 := @this: TryWithResourcesConcise;

        specialinvoke l0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void main(java.lang.String[]) throws java.lang.Exception
    {
        unknown $stack2, l0, l1;


        l0 := @parameter0: java.lang.String[];

        $stack2 = new TryWithResourcesConcise;

        specialinvoke $stack2.<TryWithResourcesConcise: void <init>()>();

        l1 = $stack2;

        virtualinvoke l1.<TryWithResourcesConcise: void printFile()>();

        return;
    }

    public void printFile() throws java.lang.Exception
    {
        unknown l0, l1, l2, l3, l4, $stack12, $stack10, $stack11, $stack9, $stack6, $stack5, $stack8, $stack7;


        l0 := @this: TryWithResourcesConcise;

        $stack5 = new java.io.BufferedReader;

        $stack6 = new java.io.FileReader;

        specialinvoke $stack6.<java.io.FileReader: void <init>(java.lang.String)>("file.txt");

        specialinvoke $stack5.<java.io.BufferedReader: void <init>(java.io.Reader)>($stack6);

        l1 = $stack5;

        l2 = l1;

      label1:
        l3 = "";

      label2:
        $stack9 = l1;

        $stack7 = virtualinvoke $stack9.<java.io.BufferedReader: java.lang.String readLine()>();

        l3 = $stack7;

        if $stack7 == null goto label3;

        $stack8 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $stack8.<java.io.PrintStream: void println(java.lang.String)>(l3);

        goto label2;

      label3:
        if l2 == null goto label9;

        virtualinvoke l2.<java.io.BufferedReader: void close()>();

        goto label9;

      label4:
        $stack11 := @caughtexception;

        l3 = $stack11;

        if l2 == null goto label8;

      label5:
        virtualinvoke l2.<java.io.BufferedReader: void close()>();

      label6:
        goto label8;

      label7:
        $stack10 := @caughtexception;

        l4 = $stack10;

        virtualinvoke l3.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(l4);

      label8:
        $stack12 = l3;

        throw $stack12;

      label9:
        return;

 catch java.lang.Throwable from label1 to label3 with label4;
 catch java.lang.Throwable from label5 to label6 with label7;
    }
}

